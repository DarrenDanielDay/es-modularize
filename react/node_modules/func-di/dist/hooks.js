const containerScopes = [];
export const resolveContainer = () => containerScopes[containerScopes.length - 1];
export const registerContainer = (container) => containerScopes.push(container);
export const revokeContainer = () => containerScopes.pop();
export const useInjection = (token) => {
    const currentContainer = resolveContainer();
    if (!currentContainer) {
        throw new Error("Cannot resolve current container.");
    }
    return currentContainer.request(token);
};
export const runInContainerScope = (container, syncFactory) => {
    registerContainer(container);
    const result = syncFactory();
    revokeContainer();
    return result;
};
//# sourceMappingURL=hooks.js.map