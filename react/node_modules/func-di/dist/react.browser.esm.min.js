import{createContext as r,useContext as e,memo as o,createElement as s,useMemo as t,forwardRef as n}from"react";import{g as c,a as m}from"./container-72bcd834.js";import{runInContainerScope as a}from"./hooks.browser.esm.min.js";const i=r(c()),p=r=>{const s=o=>e(i).consume(m(r,o));return{props:r=>{const e=r?e=>Object.assign(e,r):r=>r,t=r=>({fc:(()=>{const t=o=>e((e=>s((s=>o(r(e,s))))));return t.memo=(...r)=>o(t(...r)),t})(),forwardRef:(()=>{const t=o=>e(n(((e,t)=>s((s=>o(r(e,s),t))))));return t.memo=(...r)=>o(t(...r)),t})()});return{composed:t(((r,e)=>({...r,...e}))),separated:t(((r,e)=>({props:r,ctx:e}))),select:t}}}},d=r=>{const n=n=>o((({children:o})=>{const c=e(i);return s(i.Provider,{value:t((()=>n(c,r)),[c])},o)}));return{as:n,dependent:()=>n(((r,e)=>c(e))),fork:()=>n(((r,e)=>r.fork(e))),override:()=>n(((r,e)=>r.override(e)))}},u=r=>Object.assign(((...o)=>a(e(i),(()=>r(...o)))),r),f=()=>e(i),b=r=>e(i).request(r);export{p as Inject,i as IoCContext,d as Provide,u as connectInjectionHooks,f as useContainer,b as useContainerRequest};
